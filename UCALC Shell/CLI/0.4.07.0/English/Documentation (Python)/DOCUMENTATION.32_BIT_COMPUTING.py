WikIDSelect = int(20011)
if WikIDSelect == 20011:
	if WikIDSelect == 20011:
		if WikIDSelect == 20011:
			if WikIDSelect == 20011:
				print ("In computer architecture, 32-bit integers, memory addresses, or other data units are those that are 32 bits (4 octets) wide.") 
				print ("Also, 32-bit CPU and ALU architectures are those that are based on registers, address buses, or data buses of that size. ")
				print ("32-bit microcomputers are computers in which 32-bit microprocessors are the norm.")
				more1 = input("Contents")
				print (" ")
				print ("1 Range for storing integers")
				print ("2 Technical history")
				print ("3 Architecture")
				print ("4 Applications")
				print ("5 Images")
				print ("6 File formats")
				print ("7 See also")
				print ("8 References")
				print ("9 External links")
				print (" ")
				more1 = input("Range for storing integers")
				print (" ")
				print ("A 32-bit register can store 232 different values. The range of integer values that can be stored in 32 bits depends on the ")
				print ("integer representation used. With the two most common representations, the range is 0 through 4,294,967,295 (232 − 1) for ")
				print ("representation as an (unsigned) binary number, and −2,147,483,648 (−231) through 2,147,483,647 (231 − 1) for representation ")
				print ("as two's complement.")
				print (" ")
				print ("One important consequence is that a processor with 32-bit memory addresses can directly access at most 4 GiB of ")
				print ("byte-addressable memory (though in practice the limit may be lower).")
				more1 = input("Technical history")
				print (" ")
				print ("Memory, as well as other digital circuits and wiring, was expensive during the first decades of 32-bit architectures ")
				print ("(the 1960s to the 1980s).[1] Older 32-bit processor families (or simpler, cheaper variants thereof) could therefore have") 
				print ("many compromises and limitations in order to cut costs. This could be a 16-bit ALU, for instance, or external ")
				print ("(or internal) buses narrower than 32 bits, limiting memory size or demanding more cycles for instruction fetch, ")
				print ("execution or write back.")
				print (" ")
				print ("Despite this, such processors could be labeled ''32-bit,'' since they still had 32-bit registers and instructions able to ")
				print ("manipulate 32-bit quantities. For example, the original Motorola 68000 had a 16-bit data ALU and a 16-bit external data bus,") 
				print ("but had 32-bit registers and a 32-bit based instruction set. Such designs were sometimes referred to as ''16/32-bit''.[2]")
				print (" ")
				print ("However, the opposite is often true for newer 32-bit designs. For example, the Pentium Pro processor is a 32-bit machine, ")
				print ("with 32-bit registers and instructions that manipulate 32-bit quantities, but the external address bus is 36 bits wide, ")
				print ("giving a larger address space than 4 GB, and the external data bus is 64 bits wide, primarily in order to permit a more ")
				print ("efficient prefetch of instructions and data.[3]")
				more1 = input("Architectures")
				print (" ")
				print ("Prominent 32-bit instruction set architectures used in general-purpose computing include the IBM System/360 and IBM System/370 ")
				print ("(which had 24-bit addressing) and the System/370-XA, ESA/370, and ESA/390 (which had 31-bit addressing), the DEC VAX, the") 
				print ("NS320xx, the Motorola 68000 family (the first two models of which had 24-bit addressing), the Intel IA-32 32-bit version ")
				print ("of the x86 architecture, and the 32-bit versions of the ARM,[4] SPARC, MIPS, PowerPC and PA-RISC architectures. 32-bit ")
				print ("instruction set architectures used for embedded computing include the 68000 family and ColdFire, x86, ARM, MIPS, PowerPC,") 
				print ("and Infineon TriCore architectures.")
				more1 = input("Applications")
				print (" ")
				print ("On the x86 architecture, a 32-bit application normally means software that typically (not necessarily) uses the 32-bit ")
				print ("linear address space (or flat memory model) possible with the 80386 and later chips. In this context, the term came about ")
				print ("because DOS, Microsoft Windows and OS/2[5] were originally written for the 8088/8086 or 80286, 16-bit microprocessors with a") 
				print ("segmented address space where programs had to switch between segments to reach more than 64 kilobytes of code or data. As") 
				print ("this is quite time-consuming in comparison to other machine operations, the performance may suffer. Furthermore, ")
				print ("programming with segments tend to become complicated; special far and near keywords or memory models had to be used ")
				print ("(with care), not only in assembly language but also in high level languages such as Pascal, compiled BASIC, Fortran, C, etc.")
				print (" ")
				print ("The 80386 and its successors fully support the 16-bit segments of the 80286 but also segments for 32-bit address offsets ")
				print ("(using the new 32-bit width of the main registers). If the base address of all 32-bit segments is set to 0, and segment ")
				print ("registers are not used explicitly, the segmentation can be forgotten and the processor appears as having a simple linear ")
				print ("32-bit address space. Operating systems like Windows or OS/2 provide the possibility to run 16-bit (segmented) programs ")
				print ("as well as 32-bit programs. The former possibility exists for backward compatibility and the latter is usually meant to be") 
				print ("used for new software development.")
				more1 = input("Images")
				print (" ")
				print ("In digital images/pictures, 32-bit usually refers to RGBA color space; that is, 24-bit truecolor images with an additional ")
				print ("8-bit alpha channel. Other image formats also specify 32 bits per pixel, such as RGBE.")
				print (" ")
				print ("In digital images, 32-bit sometimes refers to high-dynamic-range imaging (HDR) formats that use 32 bits per channel, a ")
				print ("total of 96 bits per pixel. 32-bit-per-channel images are used to represent values brighter than what sRGB color space ")
				print ("allows (brighter than white); these values can then be used to more accurately retain bright highlights when either ")
				print ("lowering the exposure of the image or when it is seen through a dark filter or dull reflection.")
				print (" ")
				print ("For example, a reflection in an oil slick is only a fraction of that seen in a mirror surface. HDR imagery allows for the ")
				print ("reflection of highlights that can still be seen as bright white areas, instead of dull grey shapes.")
				more1 = input("File formats")
				print ("A 32-bit file format is a binary file format for which each elementary information is defined on 32 bits (or 4 bytes). ")
				print ("An example of such a format is the Enhanced Metafile Format.") 
				print (" ")
				noMore = input("Press [ENTER] key to exit")