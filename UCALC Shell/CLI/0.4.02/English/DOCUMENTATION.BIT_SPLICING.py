			if WikIDSelect == 30008:
				print ("Bit slicing is a technique for constructing a processor from modules of processors of smaller bit width, for the purpose of ")
				print ("increasing the word length; in theory to make an arbitrary n-bit CPU. Each of these component modules processes one bit ")
				print ("field or 'slice' of an operand. The grouped processing components would then have the capability to process the chosen full ")
				print ("word-length of a particular software design.")
				print (" ")
				print ("Bit slicing more or less died out due to the advent of the microprocessor. Recently it's been used in ALUs for quantum ")
				print ("computers, and has been used as a software technique (e.g. in x86 CPUs, for cryptography.[1])")
				more1 = input("Contents")
				print (" ")
				print ("1 Operational details")
				print ("2 Historical necessity")
				print ("3 Modern use")
				print ("3.1 Software use on non-bit-slice hardware")
				print ("3.2 Bit-sliced quantum computers")
				print ("4 See also")
				print ("5 References")
				print ("6 External links")
				print (" ")
				more1 = input("Operational details")
				print (" ")
				print ("Bit slice processors usually include an arithmetic logic unit (ALU) of 1, 2, 4, 8 or 16 bits and control lines ")
				print ("(including carry or overflow signals that are internal to the processor in non-bitsliced CPU designs).")
				print (" ")
				print ("For example, two 4-bit ALU chips could be arranged side by side, with control lines between them, to form an 8-bit ALU")
				print ("(result need not be power of two, e.g. three 1-bit can make a 3-bit ALU,[2] thus 3-bit (or n-bit) CPU, while 3-bit, or any") 
				print ("CPU with higher odd-number of bits, hasn't been manufactured and sold in volume). Four 4-bit ALU chips could be used to") 
				print ("build a 16-bit ALU. It would take eight chips to build a 32-bit word ALU. The designer could add as many slices as ")
				print ("required to manipulate increasingly longer word lengths.")
				print (" ")
				print ("A microsequencer or control ROM would be used to execute logic to provide data and control signals to regulate function of ")
				print ("the component ALUs.")
				print (" ")
				print ("Known bit-slice microprocessor modules:")
				print (" ")
				print ("1-bit slice:")
				print ("...")
				print (" ")
				print ("2-bit slice:")
				print ("Intel 3000 family (1974), e.g. Intel 3002 with Intel 3001, second-sourced by Signetics and Intersil[3]")
				print ("Signetics 8X02 family (1977)[4]")
				print (" ")
				print ("4-bit slice:")
				print ("National GPC/P / IMP-4 (1973),[5] second-sourced by Rockwell")
				print ("National IMP-16 family (1973), e.g. IMP-00A/520D (RALU) with IMP16A/521D and IMP16A/522D, cascadable up to 16 bit")
				print ("AMD Am2900 family (1975), e.g. AM2901, AM2903")
				print ("Monolithic Memories 5700/6700 family (1974)[6][7][8][9] e.g. MMI 5701 / MMI 6701, second-sourced by ITT Semiconductors")
				print ("Texas Instruments SBP0400 (1975), cascadable up to 16 bit")
				print ("Texas Instruments SN74181 (1970)")
				print ("Texas Instruments SN74S281 with SN74S282")
				print ("Texas Instruments SN74S481 with SN74S482 (1976)[10]")
				print ("Fairchild 9400 (MACROLOGIC), 4700")
				print ("Motorola M10800 family (1979),[11] e.g. MC10800")
				print (" ")
				print ("8-bit slice:")
				print ("National IMP-8 family (1974), cascadable up to 32-bit")
				print ("Texas Instruments SN54AS888 / SN74AS888")
				print ("Fairchild 100K")
				print ("ZMD U830C [de] (1978/1981), cascadable up to 32 bit")
				print ("16-bit slice:")
				print ("AMD Am29100 family")
				print ("Synopsys 49C402")
				print (" ")
				more1 = input("Historical necessity")
				print (" ")
				print ("Bit slicing, although not called that at the time, was also used in computers before large scale integrated circuits ")
				print ("(LSI, the predecessor to today's VLSI, or very-large-scale integration circuits). The first bit-sliced machine was ")
				print ("EDSAC 2, built at the University of Cambridge Mathematical Laboratory in 1956â€“1958.[citation needed]")
				print (" ")
				print ("Prior to the mid-1970s and late 1980s there was some debate over how much bus width was necessary in a given computer system ")
				print ("to make it function. Silicon chip technology and parts were much more expensive than today. Using multiple, simpler, and ")
				print ("thus less expensive ALUs was seen[by whom?] as a way to increase computing power in a cost effective manner. ")
				print ("While 32-bit architecture microprocessors were being discussed at the time,[by whom?] few were in production.[citation needed]")
				print (" ")
				print ("The UNIVAC 1100 series mainframes (one of the oldest series, originating in the 1950s) has a 36-bit architecture and the ")
				print ("1100/60 introduced in 1979 used nine Motorola MC10800 4-bit ALU[11] chips to implement the needed word width while using ")
				print ("modern integrated circuits.[12]")
				print (" ")
				print ("At the time 16-bit processors were common but expensive, and 8-bit processors, such as the Z80, were widely used in the ")
				print ("nascent home computer market.")
				print (" ")
				print ("Combining components to produce bit slice products allowed engineers and students to create more powerful and complex ")
				print ("computers at a more reasonable cost, using off-the-shelf components that could be custom-configured. The complexities ")
				print ("of creating a new computer architecture were greatly reduced when the details of the ALU were already specified (and debugged).")
				print (" ")
				print ("The main advantage was that bit slicing made it economically possible in smaller processors to use bipolar transistors,")
				print ("[citation needed] which switch much faster than NMOS or CMOS transistors.[citation needed] This allowed for much higher ")
				print ("clock rates, where speed was needed; for example DSP functions or matrix transformation, or as in the Xerox Alto, the ")
				print ("combination of flexibility and speed, before discrete CPUs were able to deliver that.")
				more1 = input("Modern use")
				print ("Software use on non-bit-slice hardware")
				print ("")
				print ("In more recent times, the term bit-slicing was re-coined by Matthew Kwan[13] to refer to the technique of using a") 
				print ("general purpose CPU to implement multiple parallel simple virtual machines using general logic instructions to ")
				print ("perform Single Instruction Multiple Data (SIMD) operations. This technique is also known as SIMD Within A Register (SWAR).")
				print (" ")
				print ("This was initially in reference to Eli Biham's 1997 paper A Fast New DES Implementation in Software,[14] which achieved ")
				print ("significant gains in performance of DES by using this method.")
				more1 = input("Bit-sliced quantum computers")
				print (" ")
				print ("To simplify the circuit structure and reduces the hardware cost of quantum computers (proposed to run the MIPS32 ")
				print ("instruction set) a 50 GHz superconducting ''4-bit bit-slice arithmetic logic unit (ALU) for 32-bit rapid single-flux-quantum") 
				print ("microprocessors was demonstrated.''[15] ")
				noMore = input("Press [ENTER] to quit")